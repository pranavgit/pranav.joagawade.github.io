{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/voice-recognition.service.ts","./src/app/speech-to-text/search.pipe.ts","./src/app/speech-to-text/speech-to-text.component.ts","./src/app/speech-to-text/speech-to-text.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'voice-reco';\r\n}\r\n","<header>\r\n  <h1 style=\"font-weight: 300;\">Pranav Jogawade-GitHub </h1>\r\n</header>\r\n<app-speech-to-text></app-speech-to-text>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SpeechToTextComponent } from './speech-to-text/speech-to-text.component';\r\nimport { SearchPipe } from './speech-to-text/search.pipe';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SpeechToTextComponent,\r\n    SearchPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\ndeclare var webkitSpeechRecognition: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VoiceRecognitionService {\r\n\r\n recognition =  new webkitSpeechRecognition();\r\n  isStoppedSpeechRecog = false;\r\n  public text = '';\r\n  tempWords;\r\n\r\n  constructor() { }\r\n\r\n  init() {\r\n\r\n    this.recognition.interimResults = true;\r\n    this.recognition.lang = 'en-US';\r\n\r\n    this.recognition.addEventListener('result', (e) => {\r\n      const transcript = Array.from(e.results)\r\n        .map((result) => result[0])\r\n        .map((result) => result.transcript)\r\n        .join('');\r\n      this.tempWords = transcript;\r\n      console.log(transcript);\r\n    });\r\n  }\r\n\r\n  start() {\r\n    this.isStoppedSpeechRecog = false;\r\n    this.recognition.start();\r\n    console.log(\"Speech recognition started\")\r\n    this.recognition.addEventListener('end', (condition) => {\r\n      // if (this.isStoppedSpeechRecog) {\r\n      //   this.recognition.stop();\r\n      //   console.log(\"End speech recognition\")\r\n      // } else {\r\n      //   this.wordConcat()\r\n      //   this.recognition.start();\r\n      // }\r\n      this.isStoppedSpeechRecog = true;\r\n      this.formatOutput()\r\n      this.recognition.stop();\r\n      console.log(\"End speech recognition\");\r\n    });\r\n  }\r\n  stop() {\r\n    this.isStoppedSpeechRecog = true;\r\n    this.formatOutput()\r\n    this.recognition.stop();\r\n    console.log(\"End speech recognition\")\r\n  }\r\n\r\n  formatOutput() {\r\n    this.text = this.tempWords;\r\n    //this.tempWords = '';\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'customerEmailFilter'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (!args) {\r\n      return value;\r\n    }\r\n    return value.filter((val) => {\r\n      let rVal = (val.id.toLocaleLowerCase().includes(args)) || (val.email.toLocaleLowerCase().includes(args));\r\n      return rVal;\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { VoiceRecognitionService } from '../service/voice-recognition.service'\r\n\r\n@Component({\r\n  selector: 'app-speech-to-text',\r\n  templateUrl: './speech-to-text.component.html',\r\n  styleUrls: ['./speech-to-text.component.scss'],\r\n  providers: [VoiceRecognitionService]\r\n})\r\nexport class SpeechToTextComponent implements OnInit {\r\n\r\n  text: string;\r\n  test: any;\r\n  name = 'Angular 6';\r\n  email=\"\";\r\n  aa:boolean=false;\r\n\r\n  users=[{\r\n    id:'123',\r\n    email:'Pranav'\r\n  },{\r\n    id:'1234',\r\n    email:'Veeramani'\r\n  },{\r\n    id:'12345',\r\n    email:'Aravind'\r\n  },{\r\n    id:'123456',\r\n    email:'Citibank'\r\n  }]\r\n\r\n  setIndex(ii){\r\n    this.aa=ii;\r\n    console.log\r\n  }\r\n\r\n\r\n  constructor(\r\n    public service : VoiceRecognitionService\r\n  ) {\r\n    this.service.init()\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  startService(){\r\n    this.service.start()\r\n  }\r\n\r\n  stopService(){\r\n    this.service.stop()\r\n  }\r\n  // ngOnChanges(changes: SimpleChanges) {\r\n  //   // changes.prop contains the old and the new value...\r\n  //   this.test = changes;\r\n  //   alert(changes)\r\n  // }\r\n\r\n}\r\n","<div style=\"margin: 30px; margin-top: 0;\">\r\n  <h2>Test 1-: Speech to text</h2>\r\n  <button class=\"mic-start\" style=\"margin: 10px;\" (click)=\"startService()\">Start</button>\r\n  <button style=\"margin: 10px;display:nones;\" (click)=\"stopService()\">Stop</button>\r\n  <p>{{service.text}}</p>\r\n  <p>{{test}}</p>\r\n</div>\r\n<input type=\"text\" [(ngModel)]=\"service.text\" placeholder=\"Serach any fields\"/>\r\n\r\n<table border=\"1\" width=\"100%\">\r\n  <tr>\r\n    <th>No.</th>\r\n    <th>Id</th>\r\n    <th>Email</th>\r\n  </tr>\r\n  <tr *ngFor=\"let customer of users | customerEmailFilter:service.text;let i = index\">\r\n    <th scope=\"row\">{{i+1}}</th>\r\n    <td>{{customer.id}}</td>\r\n    <td>{{customer.email}}</td>\r\n  </tr>\r\n\r\n</table>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}